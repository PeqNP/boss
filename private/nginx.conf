server {
    listen 80;
    server_name bithead.io;

    # Redirect all HTTP requests to HTTPS
    return 301 https://$host$request_uri;
}
server {
    listen 443 ssl;
    server_name bithead.io;
    # Prevents writing sensitive data such as Cookies. Python
    # and Swift service log access w/o sensitive information too.
    # So this is redundant.
    access_log off;

    ssl_certificate /etc/letsencrypt/live/bithead.io/fullchain.pem;
    ssl_certificate_key /etc/letsencrypt/live/bithead.io/privkey.pem;

    root /home/ubuntu/boss/public;

    # Set the default index file
    index index.html;

    # ---------------------------------------------------------------
    # /acl — LOCAL-ONLY access, served by Swift+Vapor
    # ---------------------------------------------------------------
    location ~ ^/acl {
        # Only allow requests from the local machine
        allow 127.0.0.1;
        allow ::1;      # IPv6 localhost
        deny  all;      # Block everyone else → 403

        # Forward to Swift+Vapor
        proxy_pass http://127.0.0.1:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_connect_timeout 3s;
        proxy_read_timeout 10s;
    }

    # ---------------------------------------------------------------
    # Public Python API
    # ---------------------------------------------------------------
    location /api {
        proxy_pass http://127.0.0.1:8082;
        proxy_pass_header Server;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_connect_timeout 3s;
        proxy_read_timeout 10s;
    }

    # ---------------------------------------------------------------
    # Everything else (including static files) → Swift+Vapor
    # ---------------------------------------------------------------
    location / {
        try_files $uri $uri/ @vapor;
    }

    location @vapor {
        proxy_pass http://127.0.0.1:8081;
        proxy_set_header Host $host;
        proxy_set_header X-Real-IP $remote_addr;
        proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
        proxy_connect_timeout 3s;
        proxy_read_timeout 10s;
    }
}
